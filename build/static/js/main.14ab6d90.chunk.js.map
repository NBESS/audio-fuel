{"version":3,"sources":["config.js","hash.js","components/Chill.js","components/Playlist.js","components/Blue.js","components/Energized.js","App.js","serviceWorker.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Chill","playlistId","handlePlaylistChange","coverStyles","borderRadius","margin","style","display","className","height","overflow","whiteSpace","href","onClick","id","src","alt","to","dataFetchReducer","state","action","type","token","access_token","no_data","is_error","is_loading","payload","Error","Playlist","useState","setPlaylistId","initialUrl","initialItem","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","console","log","axios","get","headers","timeout","result","data","fetchData","useSpotifyApi","doFetch","join","e","newPlaylistId","target","getAttribute","name","tracks","total","items","map","track","i","album","artists","key","images","marginTop","Blue","Energized","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14ab6d90.chunk.js","sourcesContent":["export const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"6b37770d3e274415b07071b4bc3c6253\";\nexport const redirectUri = \"https://dreamy-brown-42de28.netlify.app\";\nexport const scopes = [\n    \"user-top-read\",\n    \"playlist-modify-public\",\n\n];","// Get the hash of the url\nconst hash = window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce(function (initial, item) {\n        if (item) {\n            var parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n    }, {});\n\nwindow.location.hash = \"\";\n\nexport default hash","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\n\nexport default function Chill({playlistId, item, handlePlaylistChange}) {\n    \n    const coverStyles = {\n        borderRadius: '10px',\n        margin: '5px',\n    }\n    const playlistScroll = {\n        height: '220px',\n        overflow: 'auto',\n        whiteSpace: 'nowrap',\n    }\n\n    return (\n        <>\n            <div style={{display: 'flex'}}><h2 style={{margin: '10px 10px 0'}}>Recommended Playlists</h2></div>\n            <div className=\"playlist-links\" style={playlistScroll}>\n                <div className=\"playlist-cover\" style={{display: 'inline-block'}} ><a href='#' onClick={handlePlaylistChange}><img id=\"37i9dQZF1DX7nn7vNFcZ3X\" style={coverStyles} src=\"https://i.scdn.co/image/ab67706f00000002009cef72865de2ad416b785c\" height={200} alt=\"cover\" /></a></div>\n                <div className=\"playlist-cover\" style={{display: 'inline-block'}} ><a href='#' onClick={handlePlaylistChange}><img id=\"37i9dQZF1DWSSBwgXMlrMk\" style={coverStyles} src=\"https://i.scdn.co/image/ab67706f0000000265f59d04664888d3a8bf7ba4\" height={200} alt=\"cover\" /></a></div>\n                <div className=\"playlist-cover\" style={{display: 'inline-block'}} ><a href='#' onClick={handlePlaylistChange}><img id=\"37i9dQZF1DX2UgsUIg75Vg\" style={coverStyles} src=\"https://i.scdn.co/image/ab67706f000000022b29b4a26e620ccd2bd2d2f8\" height={200} alt=\"cover\" /></a></div>\n                <div className=\"playlist-cover\" style={{display: 'inline-block'}} ><a href='#' onClick={handlePlaylistChange}><img id=\"37i9dQZF1DX6ziVCJnEm59\" style={coverStyles} src=\"https://i.scdn.co/image/ab67706f000000025ae7aa0454c9eafdd6505fda\" height={200} alt=\"cover\" /></a></div>\n            </div>\n            <div className='track-list'></div>\n            <div><Link to='/'>Home</Link></div>\n        </>\n    )\n}\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { authEndpoint, redirectUri, scopes, clientId } from '../config'\nimport axios from 'axios';\nimport hash from '../hash';\nimport Chill from './Chill';\nimport '../App.css';\n\nexport const FETCH_INIT = 'FETCH_INIT';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\nexport const GET_PLAYLIST = 'GET_PLAYLIST';\n\n// Custom Reducer Hook for managing state during data fetch\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case FETCH_INIT:\n            return {\n                ...state,\n                token: hash.access_token,\n                no_data: true,\n                is_error: false,\n                is_loading: true,\n            };\n        case FETCH_SUCCESS:\n            return {\n                ...state,\n                token: hash.access_token,\n                item: action.payload.item,\n                no_data: false,\n                is_error: false,\n                is_loading: false\n            };\n        case FETCH_FAILURE:\n            return {\n                ...state,\n                no_data: true,\n                is_error: true,\n                is_loading: false,\n            };\n        case GET_PLAYLIST:\n            return {\n                ...state,\n                playlistId: action.payload.playlistId,\n            };\n        default:\n            throw new Error();\n    }\n}\n\n// Custom Hook for data fetching \nconst useSpotifyApi = (initialUrl, initialItem) => {\n    const [url, setUrl] = useState(initialUrl);\n\n    const [state, dispatch] = useReducer(dataFetchReducer, {\n        token: hash.access_token,\n        item: initialItem,\n        no_data: false,\n        is_error: false,\n        is_loading: true,\n    })\n\n    const doFetch = (data) => {\n        setUrl(data)\n\n    }\n    // Effect Hook to track url changes\n    useEffect(() => {\n        let didCancel = false;  // Sets condition for aborting fetch\n        const fetchData = async () => {\n            console.log('should dispatch')\n            dispatch({ type: FETCH_INIT });\n\n            try {\n                // Make a call using the token\n                const result = await axios.get(url, {\n                    headers: { \"Authorization\": \"Bearer \" + state.token },\n                    timeout: 5000\n                });\n\n                if (!didCancel) {\n                    dispatch({\n                        type: FETCH_SUCCESS, payload: {\n                            item: result.data,\n                        }\n                    })\n                }\n            } catch (error) {\n                if (!didCancel) {\n                    dispatch({ type: FETCH_FAILURE });\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {  // call back to initiate abort\n            didCancel = true;\n        };\n    }, [url, state.token]);\n    return [state, doFetch]\n}\n\nexport function Playlist() {\n    const [playlistId, setPlaylistId] = useState('');\n    const [{ item, is_loading, is_error, no_data, token }, doFetch] = useSpotifyApi(  // use of custom Hook\n        'https://api.spotify.com/v1/playlists/37i9dQZF1DX7nn7vNFcZ3X', null);\n\n    // Event handler that captures id of playlist on click\n    const handlePlaylistChange = (e) => {\n        let newPlaylistId = e.target.getAttribute('id');\n        setPlaylistId(newPlaylistId)\n        doFetch(`https://api.spotify.com/v1/playlists/${newPlaylistId}`)\n    }\n\n    return (\n        <>\n            <div className=\"App\">\n                <div style={{ margin: '10px' }}>\n                    <h3>Display Playlist according to your mood</h3>\n                    <p>Click on a link in the list above then select a playlist below to view its track list\n            </p>\n                    {!token && (\n                        <a\n                            className=\"btn btn--loginApp-link col-6\"\n                            href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                                \"%20\"\n                            )}&response_type=token&show_dialog=true`}\n                        >\n                            Login to Spotify\n                        </a>\n                    )}\n                    {is_loading && (\n                        <div>Loading...</div>\n                    )}\n\n                    {token && !no_data && item && (\n                        <>\n                            <Chill handlePlaylistChange={handlePlaylistChange} />\n\n                            <div className='playlist-wrapper'>\n                                <div className='playlist-name'><h3>{item.name}</h3></div>\n                                <div className='track-count'>Tracks: {item.tracks.total}</div>\n                                <div className='playlist-window col-4'>\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th></th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {item.tracks.items.map((track, i) => {\n                                                const { name, album, artists } = track.track;\n                                                return (\n\n                                                    <tr key={i} className='playlist-border'>\n                                                        <td><img className='cover-art' src={album.images[0].url} alt='cover art' /></td>\n                                                        <td className='song-info'><div className='song-title'>{name}</div><div className='artist-name'>{artists[0].name}</div></td>\n                                                    </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                    {is_error && <div style={{ marginTop: '50px' }}>Something went wrong during authorization</div>}\n                </div>\n            </div >\n        </>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default function Blue() {\n    const coverStyles = {\n        borderRadius: '10px',\n        margin: '5px',\n    }\n\n    const playlistScroll = {\n        height: '220px',\n        overflow: 'auto',\n        whiteSpace: 'nowrap',\n    }\n\n    return (\n        <>\n            <div style={{display: 'flex'}}><h2 style={{margin: '10px 10px 0'}}>Recommended Playlists</h2></div>\n            <div className=\"playlist-links\" style={playlistScroll}>\n                <div id=\"37i9dQZF1DXdmMcgFhLQ8u\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f0000000287debe05df2a5723b4252b4f\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DWVrtsSlLKzro\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f000000023acc8ac34c3d813b39972ef1\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DWSqBruwoIXkA\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f00000002a25dc8af8a2938dbcd47114a\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DX7gIoKXt0gmx\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f0000000213601d4833623a4d6b328e38\" height={200} alt=\"cover\" /></div>\n            </div>\n            <div><Link to='/'>Home</Link></div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Energized() {\n    const coverStyles = {\n        borderRadius: '10px',\n        margin: '5px',\n    }\n    const playlistScroll = {\n        height: '220px',\n        overflow: 'auto',\n        whiteSpace: 'nowrap',\n    }\n\n    return (\n        <>\n            <div style={{display: 'flex'}}><h2 style={{margin: '10px 10px 0'}}>Recommended Playlists</h2></div>\n            <div className=\"playlist-links\" style={playlistScroll}>\n                <div id=\"37i9dQZF1DWYNSm3Z3MxiM\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f0000000274e332932155604ae4e59d89\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DXe6bgV3TmZOL\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f00000002c1917a8a76396af1ec4abe83\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DX4eRPd9frC1m\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f00000002122921a072ad2ca9ce90a456\" height={200} alt=\"cover\" /></div>\n                <div id=\"37i9dQZF1DX8CwbNGNKurt\" className=\"playlist-cover\" style={{display: 'inline-block'}} ><img style={coverStyles} src=\"https://i.scdn.co/image/ab67706f000000023457ebc8f98b67b6df4c4f10\" height={200} alt=\"cover\" /></div>\n            </div>\n            <div><Link to='/'>Home</Link></div>\n        </>\n    )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { Playlist } from './components/Playlist';\nimport Chill from './components/Chill';\nimport Blue from './components/Blue';\nimport Energized from './components/Energized';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"header\">\n        <h1>AudioFuel</h1>\n        <nav className=\"mood-nav\">\n          <ul className=\"mood-list\">\n            <li className=\"mood-item mood-chill\"><Link to='/chill'>Chill</Link></li>\n            <li className=\"mood-item mood-energized\"><Link to='/energized'>Energized</Link></li>\n            <li className=\"mood-item mood-blue\"><Link to='/blue'>Blue</Link></li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={Playlist} />\n          <Route path='/chill' component={Chill} />\n          <Route path='/blue' component={Blue} />\n          <Route path='/energized' component={Energized} />\n        </Switch>\n      </div >\n    </Router >\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}